{"ast":null,"code":"var _jsxFileName = \"/Users/tumolabsstudent/Desktop/app/src/App.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// import React from \"react\";\nimport React, { useRef } from \"react\";\nimport \"./Skybox\";\nimport { Canvas } from \"@react-three/fiber\";\nimport SkyBox from \"./Skybox\";\nimport angleToRadians from \"./Angle\";\nimport \"./Skybox.scss\";\nimport \"./App.css\";\nimport { OrbitControls, PerspectiveCamera } from '@react-three/drei';\nimport { DoubleSide } from \"three\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Box(props) {\n  _s();\n  const mesh = useRef(null);\n\n  // mesh.current.rotation.x += Math.PI / 2;\n  // useFrame((state, delta) => (mesh.current.rotation.z += delta))\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    castShadow: true,\n    receiveShadow: true,\n    ...props,\n    ref: mesh,\n    position: [0, 0.5, 0],\n    children: [/*#__PURE__*/_jsxDEV(\"boxGeometry\", {\n      args: [0.5, 0.8, 0.8]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n      attach: \"material\",\n      color: \"red\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 6\n  }, this);\n}\n_s(Box, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n_c = Box;\nfunction Plane(props) {\n  _s2();\n  const mesh = useRef(null);\n\n  // mesh.current.rotation.x += Math.PI / 2;\n  // useFrame((state, delta) => (mesh.current.rotation.z += delta))\n\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    castShadow: true,\n    receiveShadow: true,\n    ...props,\n    ref: mesh,\n    rotation: [-Math.PI / 2, 0, 0],\n    children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n      args: [7, 7]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n      color: \"grey\",\n      side: DoubleSide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s2(Plane, \"aRahgypgjBEMoEIvg4ElXdLutjM=\");\n_c2 = Plane;\nexport default function App(props) {\n  _s3();\n  const orbitControlsRef = useRef(null);\n  const ballRef = useRef(null);\n  // const boxRef = useRef();\n  return (\n    /*#__PURE__*/\n    // <div> \n    _jsxDEV(Canvas, {\n      shadows: true,\n      className: \"skybox\",\n      children: [/*#__PURE__*/_jsxDEV(PerspectiveCamera, {\n        makeDefault: true,\n        rotation: [0, 0, Math.PI / 4],\n        position: [50, 50, 50]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n        ref: orbitControlsRef,\n        minPolarAngle: angleToRadians(60),\n        maxPolarAngle: angleToRadians(80)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SkyBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        position: [-2, 1.5, 0],\n        castShadow: true,\n        ref: ballRef,\n        children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n          args: [0.5, 32, 32]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n          color: \"#ffffff\",\n          metalness: 0.6,\n          roughness: 0.2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        rotation: [-angleToRadians(90), 0, 0],\n        receiveShadow: true,\n        children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n          args: [20, 20]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n          color: \"#1ea3d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        args: [\"#ffffff\", 0.3]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"spotLight\", {\n        args: [\"#ffffff\", 1.5, 7, angleToRadians(-45), 0.4],\n        position: [-50, -50, 50],\n        castShadow: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s3(App, \"tcQgHvceKrzSJQBeNE0QWzp2bOQ=\");\n_c3 = App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Box\");\n$RefreshReg$(_c2, \"Plane\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useRef","Canvas","SkyBox","angleToRadians","OrbitControls","PerspectiveCamera","DoubleSide","Box","props","mesh","Plane","Math","PI","App","orbitControlsRef","ballRef"],"sources":["/Users/tumolabsstudent/Desktop/app/src/App.tsx"],"sourcesContent":["// import React from \"react\";\nimport React, { useRef, useState } from \"react\";\nimport \"./Skybox\"\nimport { Canvas, useFrame } from \"@react-three/fiber\";\n\nimport SkyBox from \"./Skybox\";\nimport angleToRadians from \"./Angle\";\nimport \"./Skybox.scss\"\nimport \"./App.css\"\nimport { OrbitControls, PerspectiveCamera} from '@react-three/drei'\nimport { DoubleSide, Mesh } from \"three\";\nimport { Sky } from \"@react-three/drei\";\n\nfunction Box(props:any) {\n  const mesh = useRef<Mesh>(null!);\n\n  // mesh.current.rotation.x += Math.PI / 2;\n  // useFrame((state, delta) => (mesh.current.rotation.z += delta))\n\n  return (\n     <mesh castShadow receiveShadow {...props} ref={mesh} position={[0,0.5,0]}>\n        <boxGeometry args={[0.5, 0.8, 0.8]} />\n        <meshBasicMaterial attach=\"material\" color={\"red\"} />\n     </mesh>\n  );\n}\n\nfunction Plane(props:any) {\n  const mesh = useRef<Mesh>(null!);\n\n  // mesh.current.rotation.x += Math.PI / 2;\n  // useFrame((state, delta) => (mesh.current.rotation.z += delta))\n\n  return (\n    <mesh castShadow receiveShadow {...props} ref={mesh} rotation={[-Math.PI/2, 0, 0]}>\n      <planeGeometry args={[7, 7]}/>\n      <meshBasicMaterial color=\"grey\" side={DoubleSide} />\n    </mesh>\n  );\n}\n\nexport default function App(props:any) {\n  const orbitControlsRef = useRef(null);\n  const ballRef = useRef(null);\n  // const boxRef = useRef();\n   return (\n      // <div> \n        <Canvas shadows className=\"skybox\">\n          {/* <ambientLight /> */}\n          <PerspectiveCamera makeDefault rotation={[0, 0, Math.PI/4]} position={[50, 50, 50]} />\n          <OrbitControls ref={orbitControlsRef} minPolarAngle={angleToRadians(60)} maxPolarAngle={angleToRadians(80)} />\n          <SkyBox />\n          <mesh position={[-2, 1.5, 0]} castShadow ref={ballRef}>\n                <sphereGeometry args={[0.5, 32, 32]} />\n                <meshStandardMaterial color=\"#ffffff\" metalness={0.6} roughness={0.2} />\n            </mesh>\n          <mesh rotation={[-(angleToRadians(90)), 0, 0]} receiveShadow>\n                <planeGeometry args={[20, 20]} />\n                <meshStandardMaterial color=\"#1ea3d8\" />\n          </mesh>\n          <ambientLight args={[\"#ffffff\", 0.3]} />\n          <spotLight args={[\"#ffffff\", 1.5, 7, angleToRadians(-45), 0.4]} position={[-50, -50, 50]} castShadow />\n          {/* <ambientLight intensity={1} />\n          <directionalLight\n            intensity={0.5}\n            castShadow\n            shadow-mapSize-height={512}\n            shadow-mapSize-width={512}\n            position={[90,90,90]}\n            color={\"red\"}\n            // shadow-camera-left={-20}\n\n            // position={[80, 80, 30]}\n          />\n          <SkyBox /> \n          <Box />\n          <Plane /> */}\n          \n          {/* <group>\n          <Box castShadow receiveShadow ref={boxRef} position={[0, 0, 0]}>\n            <meshStandardMaterial attach=\"material\" color=\"white\" />\n          </Box>\n          <Plane\n            receiveShadow\n            rotation={[-Math.PI / 2, 0, 0]}\n            position={[0, -1, 0]}\n            args={[1000, 1000]}\n          >\n            <meshStandardMaterial attach=\"material\" color=\"white\" />\n          </Plane>\n        </group> */}\n          {/* <PerspectiveCamera position={[2, 2, 2]} makeDefault />\n          <OrbitControls /> */}\n\n        </Canvas>\n   );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}