{"ast":null,"code":"var _jsxFileName = \"/Users/tumolabsstudent/Desktop/app/src/Scene.tsx\",\n  _s = $RefreshSig$();\n// // import React, { useRef } from \"react\";\n// // // import { useFrame } from \"@react-three/fiber\";\n// // import { Box, Plane } from \"@react-three/drei\";\n\n// // const Scene = () => {\n// //   const boxRef = useRef();\n// // //   useFrame(() => {\n// // //     boxRef.current.rotation.y += 0.001;\n// // //     boxRef.current.rotation.x += 0.001;\n// // //     boxRef.current.rotation.z += 0.001;\n// // //   });\n// //   return (\n// //     <group>\n// //       <Box\n// //         ref={boxRef}\n// //         castShadow\n// //         receiveShadow\n// //         position={[0, 0.5, 0]}\n// //         args={[3, 3, 3]}\n// //       >\n// //         <meshStandardMaterial attach=\"material\" color=\"#C42727\" />\n// //       </Box>\n\n// //       <Plane\n// //         receiveShadow\n// //         rotation={[-Math.PI / 2, 0, 0]}\n// //         position={[0, -2, 0]}\n// //         args={[15, 15]}\n// //       >\n// //         <meshStandardMaterial attach=\"material\" color=\"#ffffff\" />\n// //       </Plane>\n\n// //       {/* <Plane\n// //         receiveShadow\n// //         rotation={[0, 0, 0]}\n// //         position={[0, 5.5, -7.5]}\n// //         args={[15, 15]}\n// //       >\n// //         <meshStandardMaterial attach=\"material\" color=\"#ffffff\" />\n// //       </Plane>\n\n// //       <Plane\n// //         receiveShadow\n// //         rotation={[0, Math.PI / 2, 0]}\n// //         position={[-7.5, 5.5, 0]}\n// //         args={[15, 15]}\n// //       >\n// //         <meshStandardMaterial attach=\"material\" color=\"#ffffff\" />\n// //       </Plane> */}\n// //     </group>\n// //   );\n// // };\n\n// // export default Scene;\n// import React, { useRef } from \"react\";\n// import { Canvas, useFrame } from \"@react-three/fiber\";\n// import { PerspectiveCamera } from \"three\";\n\n// function Scene() {\n//   const cameraRef = useRef<PerspectiveCamera>(null);\n\n//   useFrame((state) => {\n//     cameraRef.current.updateMatrixWorld();\n//     cameraRef.current.lookAt(state.mouse.currentRay.direction);\n//   });\n\n//   return (\n//     <Canvas shadowMap>\n//       <ambientLight intensity={0.5} />\n//       <spotLight intensity={0.6} position={[30, 30, 50]} castShadow />\n//       <perspectiveCamera ref={cameraRef} position={[0, 0, 10]} />\n//       <mesh position={[0, 0, 0]} receiveShadow>\n//         <boxBufferGeometry />\n//         <meshStandardMaterial />\n//       </mesh>\n//     </Canvas>\n//   );\n// }\n\n// export default Scene;\n\nimport React, { useRef } from 'react';\nimport { Canvas, useRender } from 'react-three-fiber';\nimport { useSpring, a } from 'react-spring/three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Scene() {\n  _s();\n  const cameraRef = useRef();\n  const [{\n    pos\n  }, set] = useSpring(() => ({\n    pos: [0, 0, 5]\n  }));\n  useRender(_ref => {\n    var _mouse$intersects$;\n    let {\n      mouse,\n      camera\n    } = _ref;\n    if (!cameraRef.current) return;\n    set({\n      pos: (_mouse$intersects$ = mouse.intersects[0]) === null || _mouse$intersects$ === void 0 ? void 0 : _mouse$intersects$.point\n    });\n    cameraRef.current.lookAt(pos.get());\n  });\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"spotLight\", {\n      position: [30, 30, 50],\n      castShadow: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(a.mesh, {\n      onClick: e => set({\n        pos: e.point\n      }),\n      receiveShadow: true,\n      children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, -1, 0],\n      receiveShadow: true,\n      children: [/*#__PURE__*/_jsxDEV(\"planeBufferGeometry\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: '#eee'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"perspectiveCamera\", {\n      ref: cameraRef,\n      position: pos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(Scene, \"hi1U9QjsCOuPZvlUYQ2HwR4IY50=\", false, function () {\n  return [useSpring, useRender];\n});\n_c = Scene;\nexport default Scene;\nvar _c;\n$RefreshReg$(_c, \"Scene\");","map":{"version":3,"names":["React","useRef","Canvas","useRender","useSpring","a","Scene","cameraRef","pos","set","mouse","camera","current","intersects","point","lookAt","get","e"],"sources":["/Users/tumolabsstudent/Desktop/app/src/Scene.tsx"],"sourcesContent":["// // import React, { useRef } from \"react\";\n// // // import { useFrame } from \"@react-three/fiber\";\n// // import { Box, Plane } from \"@react-three/drei\";\n\n// // const Scene = () => {\n// //   const boxRef = useRef();\n// // //   useFrame(() => {\n// // //     boxRef.current.rotation.y += 0.001;\n// // //     boxRef.current.rotation.x += 0.001;\n// // //     boxRef.current.rotation.z += 0.001;\n// // //   });\n// //   return (\n// //     <group>\n// //       <Box\n// //         ref={boxRef}\n// //         castShadow\n// //         receiveShadow\n// //         position={[0, 0.5, 0]}\n// //         args={[3, 3, 3]}\n// //       >\n// //         <meshStandardMaterial attach=\"material\" color=\"#C42727\" />\n// //       </Box>\n\n// //       <Plane\n// //         receiveShadow\n// //         rotation={[-Math.PI / 2, 0, 0]}\n// //         position={[0, -2, 0]}\n// //         args={[15, 15]}\n// //       >\n// //         <meshStandardMaterial attach=\"material\" color=\"#ffffff\" />\n// //       </Plane>\n\n// //       {/* <Plane\n// //         receiveShadow\n// //         rotation={[0, 0, 0]}\n// //         position={[0, 5.5, -7.5]}\n// //         args={[15, 15]}\n// //       >\n// //         <meshStandardMaterial attach=\"material\" color=\"#ffffff\" />\n// //       </Plane>\n\n// //       <Plane\n// //         receiveShadow\n// //         rotation={[0, Math.PI / 2, 0]}\n// //         position={[-7.5, 5.5, 0]}\n// //         args={[15, 15]}\n// //       >\n// //         <meshStandardMaterial attach=\"material\" color=\"#ffffff\" />\n// //       </Plane> */}\n// //     </group>\n// //   );\n// // };\n\n// // export default Scene;\n// import React, { useRef } from \"react\";\n// import { Canvas, useFrame } from \"@react-three/fiber\";\n// import { PerspectiveCamera } from \"three\";\n\n// function Scene() {\n//   const cameraRef = useRef<PerspectiveCamera>(null);\n\n//   useFrame((state) => {\n//     cameraRef.current.updateMatrixWorld();\n//     cameraRef.current.lookAt(state.mouse.currentRay.direction);\n//   });\n\n//   return (\n//     <Canvas shadowMap>\n//       <ambientLight intensity={0.5} />\n//       <spotLight intensity={0.6} position={[30, 30, 50]} castShadow />\n//       <perspectiveCamera ref={cameraRef} position={[0, 0, 10]} />\n//       <mesh position={[0, 0, 0]} receiveShadow>\n//         <boxBufferGeometry />\n//         <meshStandardMaterial />\n//       </mesh>\n//     </Canvas>\n//   );\n// }\n\n// export default Scene;\n\nimport React, { useRef } from 'react';\nimport { Canvas, useRender } from 'react-three-fiber';\nimport { useSpring, a } from 'react-spring/three';\nimport { Vector3 } from 'three';\n\nfunction Scene() {\n  const cameraRef = useRef<THREE.PerspectiveCamera>();\n\n  const [{ pos }, set] = useSpring(() => ({ pos: [0, 0, 5] }));\n\n  useRender(({ mouse, camera }) => {\n    if (!cameraRef.current) return;\n    set({ pos: mouse.intersects[0]?.point });\n    cameraRef.current.lookAt(pos.get());\n  });\n\n  return (\n    <Canvas>\n      <ambientLight />\n      <spotLight position={[30, 30, 50]} castShadow />\n      <a.mesh onClick={e => set({ pos: e.point })} receiveShadow>\n        <boxBufferGeometry />\n        <meshStandardMaterial />\n      </a.mesh>\n      <mesh position={[0, -1, 0]} receiveShadow>\n        <planeBufferGeometry />\n        <meshStandardMaterial color={'#eee'} />\n      </mesh>\n      <perspectiveCamera ref={cameraRef} position={pos} />\n    </Canvas>\n  );\n}\n\nexport default Scene;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,MAAM,EAAEC,SAAS,QAAQ,mBAAmB;AACrD,SAASC,SAAS,EAAEC,CAAC,QAAQ,oBAAoB;AAAC;AAGlD,SAASC,KAAK,GAAG;EAAA;EACf,MAAMC,SAAS,GAAGN,MAAM,EAA2B;EAEnD,MAAM,CAAC;IAAEO;EAAI,CAAC,EAAEC,GAAG,CAAC,GAAGL,SAAS,CAAC,OAAO;IAAEI,GAAG,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;EAAE,CAAC,CAAC,CAAC;EAE5DL,SAAS,CAAC,QAAuB;IAAA;IAAA,IAAtB;MAAEO,KAAK;MAAEC;IAAO,CAAC;IAC1B,IAAI,CAACJ,SAAS,CAACK,OAAO,EAAE;IACxBH,GAAG,CAAC;MAAED,GAAG,wBAAEE,KAAK,CAACG,UAAU,CAAC,CAAC,CAAC,uDAAnB,mBAAqBC;IAAM,CAAC,CAAC;IACxCP,SAAS,CAACK,OAAO,CAACG,MAAM,CAACP,GAAG,CAACQ,GAAG,EAAE,CAAC;EACrC,CAAC,CAAC;EAEF,oBACE,QAAC,MAAM;IAAA,wBACL;MAAA;MAAA;MAAA;IAAA,QAAgB,eAChB;MAAW,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE;MAAC,UAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QAAG,eAChD,QAAC,CAAC,CAAC,IAAI;MAAC,OAAO,EAAEC,CAAC,IAAIR,GAAG,CAAC;QAAED,GAAG,EAAES,CAAC,CAACH;MAAM,CAAC,CAAE;MAAC,aAAa;MAAA,wBACxD;QAAA;QAAA;QAAA;MAAA,QAAqB,eACrB;QAAA;QAAA;QAAA;MAAA,QAAwB;IAAA;MAAA;MAAA;MAAA;IAAA,QACjB,eACT;MAAM,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE;MAAC,aAAa;MAAA,wBACvC;QAAA;QAAA;QAAA;MAAA,QAAuB,eACvB;QAAsB,KAAK,EAAE;MAAO;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAClC,eACP;MAAmB,GAAG,EAAEP,SAAU;MAAC,QAAQ,EAAEC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC7C;AAEb;AAAC,GA1BQF,KAAK;EAAA,QAGWF,SAAS,EAEhCD,SAAS;AAAA;AAAA,KALFG,KAAK;AA4Bd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}