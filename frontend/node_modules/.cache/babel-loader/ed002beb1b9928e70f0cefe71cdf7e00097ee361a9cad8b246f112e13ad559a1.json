{"ast":null,"code":"var _jsxFileName = \"/Users/tumolabsstudent/Desktop/app/src/Scene.tsx\",\n  _s = $RefreshSig$();\n// // // import React, { useRef } from \"react\";\n// // // // import { useFrame } from \"@react-three/fiber\";\n// // // import { Box, Plane } from \"@react-three/drei\";\n\n// // // const Scene = () => {\n// // //   const boxRef = useRef();\n// // // //   useFrame(() => {\n// // // //     boxRef.current.rotation.y += 0.001;\n// // // //     boxRef.current.rotation.x += 0.001;\n// // // //     boxRef.current.rotation.z += 0.001;\n// // // //   });\n// // //   return (\n// // //     <group>\n// // //       <Box\n// // //         ref={boxRef}\n// // //         castShadow\n// // //         receiveShadow\n// // //         position={[0, 0.5, 0]}\n// // //         args={[3, 3, 3]}\n// // //       >\n// // //         <meshStandardMaterial attach=\"material\" color=\"#C42727\" />\n// // //       </Box>\n\n// // //       <Plane\n// // //         receiveShadow\n// // //         rotation={[-Math.PI / 2, 0, 0]}\n// // //         position={[0, -2, 0]}\n// // //         args={[15, 15]}\n// // //       >\n// // //         <meshStandardMaterial attach=\"material\" color=\"#ffffff\" />\n// // //       </Plane>\n\n// // //       {/* <Plane\n// // //         receiveShadow\n// // //         rotation={[0, 0, 0]}\n// // //         position={[0, 5.5, -7.5]}\n// // //         args={[15, 15]}\n// // //       >\n// // //         <meshStandardMaterial attach=\"material\" color=\"#ffffff\" />\n// // //       </Plane>\n\n// // //       <Plane\n// // //         receiveShadow\n// // //         rotation={[0, Math.PI / 2, 0]}\n// // //         position={[-7.5, 5.5, 0]}\n// // //         args={[15, 15]}\n// // //       >\n// // //         <meshStandardMaterial attach=\"material\" color=\"#ffffff\" />\n// // //       </Plane> */}\n// // //     </group>\n// // //   );\n// // // };\n\n// // // export default Scene;\n// // import React, { useRef } from \"react\";\n// // import { Canvas, useFrame } from \"@react-three/fiber\";\n// // import { PerspectiveCamera } from \"three\";\n\n// // function Scene() {\n// //   const cameraRef = useRef<PerspectiveCamera>(null);\n\n// //   useFrame((state) => {\n// //     cameraRef.current.updateMatrixWorld();\n// //     cameraRef.current.lookAt(state.mouse.currentRay.direction);\n// //   });\n\n// //   return (\n// //     <Canvas shadowMap>\n// //       <ambientLight intensity={0.5} />\n// //       <spotLight intensity={0.6} position={[30, 30, 50]} castShadow />\n// //       <perspectiveCamera ref={cameraRef} position={[0, 0, 10]} />\n// //       <mesh position={[0, 0, 0]} receiveShadow>\n// //         <boxBufferGeometry />\n// //         <meshStandardMaterial />\n// //       </mesh>\n// //     </Canvas>\n// //   );\n// // }\n\n// // export default Scene;\n\n// import React, { useRef } from 'react';\n// import { Canvas, useRender } from '@react-three/fiber';\n// import { useSpring, a } from '@react-spring/three';\n// import { Vector3 } from 'three';\n\n// function Scene() {\n//   const cameraRef = useRef<THREE.PerspectiveCamera>();\n\n//   const [{ pos }, set] = useSpring(() => ({ pos: [0, 0, 5] }));\n\n//   useRender(({ mouse, camera }) => {\n//     if (!cameraRef.current) return;\n//     set({ pos: mouse.intersects[0]?.point });\n//     cameraRef.current.lookAt(pos.get());\n//   });\n\n//   return (\n//     <Canvas>\n//       <ambientLight />\n//       <spotLight position={[30, 30, 50]} castShadow />\n//       <a.mesh onClick={e => set({ pos: e.point })} receiveShadow>\n//         <boxGeometry />\n//         <meshStandardMaterial />\n//       </a.mesh>\n//       <mesh position={[0, -1, 0]} receiveShadow>\n//         <planeGeometry />\n//         <meshStandardMaterial color={'#eee'} />\n//       </mesh>\n//       <perspectiveCamera ref={cameraRef} position={pos} />\n//     </Canvas>\n//   );\n// }\n\n// export default Scene;\nimport React, { useRef } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\n// import { useRender } from \"@react-three/\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Scene = () => {\n  _s();\n  const cameraRef = useRef();\n\n  //   useRender(({ mouse, camera }) => {\n  //     if (!cameraRef.current) return;\n\n  cameraRef.current.lookAt(mouse.currentRay.direction);\n  //   });\n\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"spotLight\", {\n      position: [30, 30, 50],\n      castShadow: true,\n      \"shadow-mapSize-width\": 2048,\n      \"shadow-mapSize-height\": 2048\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"perspectiveCamera\", {\n      ref: cameraRef,\n      position: [0, 0, 5]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0],\n      castShadow: true,\n      children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, -1, 0],\n      receiveShadow: true,\n      children: [/*#__PURE__*/_jsxDEV(\"planeBufferGeometry\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        color: \"#eee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(Scene, \"KZOwJmms4k1PrRJ9ZQLW+dwO3yU=\");\n_c = Scene;\nexport default Scene;\nvar _c;\n$RefreshReg$(_c, \"Scene\");","map":{"version":3,"names":["React","useRef","Canvas","Scene","cameraRef","current","lookAt","mouse","currentRay","direction"],"sources":["/Users/tumolabsstudent/Desktop/app/src/Scene.tsx"],"sourcesContent":["// // // import React, { useRef } from \"react\";\n// // // // import { useFrame } from \"@react-three/fiber\";\n// // // import { Box, Plane } from \"@react-three/drei\";\n\n// // // const Scene = () => {\n// // //   const boxRef = useRef();\n// // // //   useFrame(() => {\n// // // //     boxRef.current.rotation.y += 0.001;\n// // // //     boxRef.current.rotation.x += 0.001;\n// // // //     boxRef.current.rotation.z += 0.001;\n// // // //   });\n// // //   return (\n// // //     <group>\n// // //       <Box\n// // //         ref={boxRef}\n// // //         castShadow\n// // //         receiveShadow\n// // //         position={[0, 0.5, 0]}\n// // //         args={[3, 3, 3]}\n// // //       >\n// // //         <meshStandardMaterial attach=\"material\" color=\"#C42727\" />\n// // //       </Box>\n\n// // //       <Plane\n// // //         receiveShadow\n// // //         rotation={[-Math.PI / 2, 0, 0]}\n// // //         position={[0, -2, 0]}\n// // //         args={[15, 15]}\n// // //       >\n// // //         <meshStandardMaterial attach=\"material\" color=\"#ffffff\" />\n// // //       </Plane>\n\n// // //       {/* <Plane\n// // //         receiveShadow\n// // //         rotation={[0, 0, 0]}\n// // //         position={[0, 5.5, -7.5]}\n// // //         args={[15, 15]}\n// // //       >\n// // //         <meshStandardMaterial attach=\"material\" color=\"#ffffff\" />\n// // //       </Plane>\n\n// // //       <Plane\n// // //         receiveShadow\n// // //         rotation={[0, Math.PI / 2, 0]}\n// // //         position={[-7.5, 5.5, 0]}\n// // //         args={[15, 15]}\n// // //       >\n// // //         <meshStandardMaterial attach=\"material\" color=\"#ffffff\" />\n// // //       </Plane> */}\n// // //     </group>\n// // //   );\n// // // };\n\n// // // export default Scene;\n// // import React, { useRef } from \"react\";\n// // import { Canvas, useFrame } from \"@react-three/fiber\";\n// // import { PerspectiveCamera } from \"three\";\n\n// // function Scene() {\n// //   const cameraRef = useRef<PerspectiveCamera>(null);\n\n// //   useFrame((state) => {\n// //     cameraRef.current.updateMatrixWorld();\n// //     cameraRef.current.lookAt(state.mouse.currentRay.direction);\n// //   });\n\n// //   return (\n// //     <Canvas shadowMap>\n// //       <ambientLight intensity={0.5} />\n// //       <spotLight intensity={0.6} position={[30, 30, 50]} castShadow />\n// //       <perspectiveCamera ref={cameraRef} position={[0, 0, 10]} />\n// //       <mesh position={[0, 0, 0]} receiveShadow>\n// //         <boxBufferGeometry />\n// //         <meshStandardMaterial />\n// //       </mesh>\n// //     </Canvas>\n// //   );\n// // }\n\n// // export default Scene;\n\n// import React, { useRef } from 'react';\n// import { Canvas, useRender } from '@react-three/fiber';\n// import { useSpring, a } from '@react-spring/three';\n// import { Vector3 } from 'three';\n\n// function Scene() {\n//   const cameraRef = useRef<THREE.PerspectiveCamera>();\n\n//   const [{ pos }, set] = useSpring(() => ({ pos: [0, 0, 5] }));\n\n//   useRender(({ mouse, camera }) => {\n//     if (!cameraRef.current) return;\n//     set({ pos: mouse.intersects[0]?.point });\n//     cameraRef.current.lookAt(pos.get());\n//   });\n\n//   return (\n//     <Canvas>\n//       <ambientLight />\n//       <spotLight position={[30, 30, 50]} castShadow />\n//       <a.mesh onClick={e => set({ pos: e.point })} receiveShadow>\n//         <boxGeometry />\n//         <meshStandardMaterial />\n//       </a.mesh>\n//       <mesh position={[0, -1, 0]} receiveShadow>\n//         <planeGeometry />\n//         <meshStandardMaterial color={'#eee'} />\n//       </mesh>\n//       <perspectiveCamera ref={cameraRef} position={pos} />\n//     </Canvas>\n//   );\n// }\n\n// export default Scene;\nimport React, { useRef } from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\n// import { useRender } from \"@react-three/\";\nimport { Vector3 } from \"three\";\n\nconst Scene = () => {\n  const cameraRef = useRef<THREE.PerspectiveCamera>();\n\n//   useRender(({ mouse, camera }) => {\n//     if (!cameraRef.current) return;\n\n    cameraRef.current.lookAt(mouse.currentRay.direction);\n//   });\n\n  return (\n    <Canvas>\n      <ambientLight />\n      <spotLight\n        position={[30, 30, 50]}\n        castShadow\n        shadow-mapSize-width={2048}\n        shadow-mapSize-height={2048}\n      />\n      <perspectiveCamera ref={cameraRef} position={[0, 0, 5]} />\n      <mesh position={[0, 0, 0]} castShadow>\n        <boxBufferGeometry />\n        <meshStandardMaterial />\n      </mesh>\n      <mesh position={[0, -1, 0]} receiveShadow>\n        <planeBufferGeometry />\n        <meshStandardMaterial color=\"#eee\" />\n      </mesh>\n    </Canvas>\n  );\n};\n\nexport default Scene;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,MAAM,QAAQ,oBAAoB;AAC3C;AAAA;AAGA,MAAMC,KAAK,GAAG,MAAM;EAAA;EAClB,MAAMC,SAAS,GAAGH,MAAM,EAA2B;;EAErD;EACA;;EAEIG,SAAS,CAACC,OAAO,CAACC,MAAM,CAACC,KAAK,CAACC,UAAU,CAACC,SAAS,CAAC;EACxD;;EAEE,oBACE,QAAC,MAAM;IAAA,wBACL;MAAA;MAAA;MAAA;IAAA,QAAgB,eAChB;MACE,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE;MACvB,UAAU;MACV,wBAAsB,IAAK;MAC3B,yBAAuB;IAAK;MAAA;MAAA;MAAA;IAAA,QAC5B,eACF;MAAmB,GAAG,EAAEL,SAAU;MAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eAC1D;MAAM,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAAC,UAAU;MAAA,wBACnC;QAAA;QAAA;QAAA;MAAA,QAAqB,eACrB;QAAA;QAAA;QAAA;MAAA,QAAwB;IAAA;MAAA;MAAA;MAAA;IAAA,QACnB,eACP;MAAM,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAE;MAAC,aAAa;MAAA,wBACvC;QAAA;QAAA;QAAA;MAAA,QAAuB,eACvB;QAAsB,KAAK,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAChC;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEb,CAAC;AAAC,GA7BID,KAAK;AAAA,KAALA,KAAK;AA+BX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}