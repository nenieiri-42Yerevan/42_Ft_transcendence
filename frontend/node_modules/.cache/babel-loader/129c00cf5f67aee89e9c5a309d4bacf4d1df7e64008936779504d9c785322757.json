{"ast":null,"code":"var _jsxFileName = \"/Users/tumolabsstudent/Desktop/app/src/Scene.tsx\",\n  _s = $RefreshSig$();\n// import React, { useRef } from \"react\";\n// // import { useFrame } from \"@react-three/fiber\";\n// import { Box, Plane } from \"@react-three/drei\";\n\n// const Scene = () => {\n//   const boxRef = useRef();\n// //   useFrame(() => {\n// //     boxRef.current.rotation.y += 0.001;\n// //     boxRef.current.rotation.x += 0.001;\n// //     boxRef.current.rotation.z += 0.001;\n// //   });\n//   return (\n//     <group>\n//       <Box\n//         ref={boxRef}\n//         castShadow\n//         receiveShadow\n//         position={[0, 0.5, 0]}\n//         args={[3, 3, 3]}\n//       >\n//         <meshStandardMaterial attach=\"material\" color=\"#C42727\" />\n//       </Box>\n\n//       <Plane\n//         receiveShadow\n//         rotation={[-Math.PI / 2, 0, 0]}\n//         position={[0, -2, 0]}\n//         args={[15, 15]}\n//       >\n//         <meshStandardMaterial attach=\"material\" color=\"#ffffff\" />\n//       </Plane>\n\n//       {/* <Plane\n//         receiveShadow\n//         rotation={[0, 0, 0]}\n//         position={[0, 5.5, -7.5]}\n//         args={[15, 15]}\n//       >\n//         <meshStandardMaterial attach=\"material\" color=\"#ffffff\" />\n//       </Plane>\n\n//       <Plane\n//         receiveShadow\n//         rotation={[0, Math.PI / 2, 0]}\n//         position={[-7.5, 5.5, 0]}\n//         args={[15, 15]}\n//       >\n//         <meshStandardMaterial attach=\"material\" color=\"#ffffff\" />\n//       </Plane> */}\n//     </group>\n//   );\n// };\n\n// export default Scene;\nimport React, { useRef } from \"react\";\nimport { Canvas, useFrame } from \"@react-three-fiber\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Scene() {\n  _s();\n  const cameraRef = useRef();\n  useFrame(state => {\n    cameraRef.current.updateMatrixWorld();\n    cameraRef.current.lookAt(state.mouse.currentRay.direction);\n  });\n  return /*#__PURE__*/_jsxDEV(Canvas, {\n    shadowMap: true,\n    children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n      intensity: 0.5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"spotLight\", {\n      intensity: 0.6,\n      position: [30, 30, 50],\n      castShadow: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"perspectiveCamera\", {\n      ref: cameraRef,\n      position: [0, 0, 10]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0, 0],\n      receiveShadow: true,\n      children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Scene, \"hJVU1VJhV3D7gaub54nOAyWFt8k=\", false, function () {\n  return [useFrame];\n});\n_c = Scene;\nexport default Scene;\nvar _c;\n$RefreshReg$(_c, \"Scene\");","map":{"version":3,"names":["React","useRef","Canvas","useFrame","Scene","cameraRef","state","current","updateMatrixWorld","lookAt","mouse","currentRay","direction"],"sources":["/Users/tumolabsstudent/Desktop/app/src/Scene.tsx"],"sourcesContent":["// import React, { useRef } from \"react\";\n// // import { useFrame } from \"@react-three/fiber\";\n// import { Box, Plane } from \"@react-three/drei\";\n\n// const Scene = () => {\n//   const boxRef = useRef();\n// //   useFrame(() => {\n// //     boxRef.current.rotation.y += 0.001;\n// //     boxRef.current.rotation.x += 0.001;\n// //     boxRef.current.rotation.z += 0.001;\n// //   });\n//   return (\n//     <group>\n//       <Box\n//         ref={boxRef}\n//         castShadow\n//         receiveShadow\n//         position={[0, 0.5, 0]}\n//         args={[3, 3, 3]}\n//       >\n//         <meshStandardMaterial attach=\"material\" color=\"#C42727\" />\n//       </Box>\n\n//       <Plane\n//         receiveShadow\n//         rotation={[-Math.PI / 2, 0, 0]}\n//         position={[0, -2, 0]}\n//         args={[15, 15]}\n//       >\n//         <meshStandardMaterial attach=\"material\" color=\"#ffffff\" />\n//       </Plane>\n\n//       {/* <Plane\n//         receiveShadow\n//         rotation={[0, 0, 0]}\n//         position={[0, 5.5, -7.5]}\n//         args={[15, 15]}\n//       >\n//         <meshStandardMaterial attach=\"material\" color=\"#ffffff\" />\n//       </Plane>\n\n//       <Plane\n//         receiveShadow\n//         rotation={[0, Math.PI / 2, 0]}\n//         position={[-7.5, 5.5, 0]}\n//         args={[15, 15]}\n//       >\n//         <meshStandardMaterial attach=\"material\" color=\"#ffffff\" />\n//       </Plane> */}\n//     </group>\n//   );\n// };\n\n// export default Scene;\nimport React, { useRef } from \"react\";\nimport { Canvas, useFrame } from \"@react-three-fiber\";\nimport { PerspectiveCamera } from \"three\";\n\nfunction Scene() {\n  const cameraRef = useRef<PerspectiveCamera>();\n\n  useFrame((state) => {\n    cameraRef.current.updateMatrixWorld();\n    cameraRef.current.lookAt(state.mouse.currentRay.direction);\n  });\n\n  return (\n    <Canvas shadowMap>\n      <ambientLight intensity={0.5} />\n      <spotLight intensity={0.6} position={[30, 30, 50]} castShadow />\n      <perspectiveCamera ref={cameraRef} position={[0, 0, 10]} />\n      <mesh position={[0, 0, 0]} receiveShadow>\n        <boxBufferGeometry />\n        <meshStandardMaterial />\n      </mesh>\n    </Canvas>\n  );\n}\n\nexport default Scene;"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,MAAM,EAAEC,QAAQ,QAAQ,oBAAoB;AAAC;AAGtD,SAASC,KAAK,GAAG;EAAA;EACf,MAAMC,SAAS,GAAGJ,MAAM,EAAqB;EAE7CE,QAAQ,CAAEG,KAAK,IAAK;IAClBD,SAAS,CAACE,OAAO,CAACC,iBAAiB,EAAE;IACrCH,SAAS,CAACE,OAAO,CAACE,MAAM,CAACH,KAAK,CAACI,KAAK,CAACC,UAAU,CAACC,SAAS,CAAC;EAC5D,CAAC,CAAC;EAEF,oBACE,QAAC,MAAM;IAAC,SAAS;IAAA,wBACf;MAAc,SAAS,EAAE;IAAI;MAAA;MAAA;MAAA;IAAA,QAAG,eAChC;MAAW,SAAS,EAAE,GAAI;MAAC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAE;MAAC,UAAU;IAAA;MAAA;MAAA;MAAA;IAAA,QAAG,eAChE;MAAmB,GAAG,EAAEP,SAAU;MAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eAC3D;MAAM,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAAC,aAAa;MAAA,wBACtC;QAAA;QAAA;QAAA;MAAA,QAAqB,eACrB;QAAA;QAAA;QAAA;MAAA,QAAwB;IAAA;MAAA;MAAA;MAAA;IAAA,QACnB;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEb;AAAC,GAnBQD,KAAK;EAAA,QAGZD,QAAQ;AAAA;AAAA,KAHDC,KAAK;AAqBd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}